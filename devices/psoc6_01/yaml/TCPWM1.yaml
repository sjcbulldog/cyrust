---
block/CNT:
  description: Timer/Counter/PWM Counter Module
  items:
    - name: CTRL
      description: Counter control register
      byte_offset: 0
      fieldset: CNT_CTRL
    - name: STATUS
      description: Counter status register
      byte_offset: 4
      access: Read
      fieldset: STATUS
    - name: COUNTER
      description: Counter count register
      byte_offset: 8
      fieldset: COUNTER
    - name: CC
      description: Counter compare/capture register
      byte_offset: 12
      fieldset: CC
    - name: CC_BUFF
      description: Counter buffered compare/capture register
      byte_offset: 16
      fieldset: CC_BUFF
    - name: PERIOD
      description: Counter period register
      byte_offset: 20
      fieldset: PERIOD
    - name: PERIOD_BUFF
      description: Counter buffered period register
      byte_offset: 24
      fieldset: PERIOD_BUFF
    - name: TR_CTRL0
      description: Counter trigger control register 0
      byte_offset: 32
      fieldset: TR_CTRL0
    - name: TR_CTRL1
      description: Counter trigger control register 1
      byte_offset: 36
      fieldset: TR_CTRL1
    - name: TR_CTRL2
      description: Counter trigger control register 2
      byte_offset: 40
      fieldset: TR_CTRL2
    - name: INTR
      description: Interrupt request register
      byte_offset: 48
      fieldset: INTR
    - name: INTR_SET
      description: Interrupt set request register
      byte_offset: 52
      fieldset: INTR_SET
    - name: INTR_MASK
      description: Interrupt mask register
      byte_offset: 56
      fieldset: INTR_MASK
    - name: INTR_MASKED
      description: Interrupt masked request register
      byte_offset: 60
      access: Read
      fieldset: INTR_MASKED
block/TCPWM0:
  description: Timer/Counter/PWM
  items:
    - name: CTRL
      description: TCPWM control register
      byte_offset: 0
      fieldset: TCPWM0_CTRL
    - name: CTRL_CLR
      description: TCPWM control clear register
      byte_offset: 4
      fieldset: CTRL_CLR
    - name: CTRL_SET
      description: TCPWM control set register
      byte_offset: 8
      fieldset: CTRL_SET
    - name: CMD_CAPTURE
      description: TCPWM capture command register
      byte_offset: 12
      fieldset: CMD_CAPTURE
    - name: CMD_RELOAD
      description: TCPWM reload command register
      byte_offset: 16
      fieldset: CMD_RELOAD
    - name: CMD_STOP
      description: TCPWM stop command register
      byte_offset: 20
      fieldset: CMD_STOP
    - name: CMD_START
      description: TCPWM start command register
      byte_offset: 24
      fieldset: CMD_START
    - name: INTR_CAUSE
      description: TCPWM Counter interrupt cause register
      byte_offset: 28
      access: Read
      fieldset: INTR_CAUSE
    - name: CNT
      description: Timer/Counter/PWM Counter Module
      array:
        len: 24
        stride: 64
      byte_offset: 256
      block: CNT
fieldset/CC:
  description: Counter compare/capture register
  fields:
    - name: CC
      description: "In CAPTURE mode, captures the counter value. In other modes, compared to counter value."
      bit_offset: 0
      bit_size: 32
fieldset/CC_BUFF:
  description: Counter buffered compare/capture register
  fields:
    - name: CC
      description: Additional buffer for counter CC register.
      bit_offset: 0
      bit_size: 32
fieldset/CMD_CAPTURE:
  description: TCPWM capture command register
  fields:
    - name: COUNTER_CAPTURE
      description: "Counters SW capture trigger. When written with '1', a capture trigger is generated and the HW sets the field to '0' when the SW trigger has taken effect. It should be noted that the HW operates on the counter frequency. If the counter is disabled through CTRL.COUNTER_ENABLED, the field is immediately set to '0'."
      bit_offset: 0
      bit_size: 32
fieldset/CMD_RELOAD:
  description: TCPWM reload command register
  fields:
    - name: COUNTER_RELOAD
      description: "Counters SW reload trigger. For HW behavior, see COUNTER_CAPTURE field."
      bit_offset: 0
      bit_size: 32
fieldset/CMD_START:
  description: TCPWM start command register
  fields:
    - name: COUNTER_START
      description: "Counters SW start trigger. For HW behavior, see COUNTER_CAPTURE field."
      bit_offset: 0
      bit_size: 32
fieldset/CMD_STOP:
  description: TCPWM stop command register
  fields:
    - name: COUNTER_STOP
      description: "Counters SW stop trigger. For HW behavior, see COUNTER_CAPTURE field."
      bit_offset: 0
      bit_size: 32
fieldset/CNT_CTRL:
  description: Counter control register
  fields:
    - name: AUTO_RELOAD_CC
      description: "Specifies switching of the CC and buffered CC values. This field has a function in TIMER, PWM, PWM_DT and PWM_PR modes. Timer mode: '0': never switch. '1': switch on a compare match event. PWM, PWM_DT, PWM_PR modes: '0: never switch. '1': switch on a terminal count event with an actively pending switch event."
      bit_offset: 0
      bit_size: 1
    - name: AUTO_RELOAD_PERIOD
      description: "Specifies switching of the PERIOD and buffered PERIOD values. This field has a function in PWM, PWM_DT and PWM_PR modes. '0': never switch. '1': switch on a terminal count event with and actively pending switch event."
      bit_offset: 1
      bit_size: 1
    - name: PWM_SYNC_KILL
      description: "Specifies asynchronous/synchronous kill behavior: '1': synchronous kill mode: the kill event disables the 'dt_line_out' and 'dt_line_compl_out' signals till the next terminal count event (synchronous kill). In synchronous kill mode, STOP_EDGE should be RISING_EDGE. '0': asynchronous kill mode: the kill event only disables the 'dt_line_out' and 'dt_line_compl_out' signals when present. In asynchronous kill mode, STOP_EDGE should be NO_EDGE_DET. This field has a function in PWM and PWM_DT modes only. This field is only used when PWM_STOP_ON_KILL is '0'."
      bit_offset: 2
      bit_size: 1
    - name: PWM_STOP_ON_KILL
      description: "Specifies whether the counter stops on a kill events: '0': kill event does NOT stop counter. '1': kill event stops counter. This field has a function in PWM, PWM_DT and PWM_PR modes only."
      bit_offset: 3
      bit_size: 1
    - name: GENERIC
      description: "Generic 8-bit control field. In PWM_DT mode, this field is used to determine the dead time: amount of dead time cycles in the counter clock domain. In all other modes, the lower 3 bits of this field determine pre-scaling of the selected counter clock."
      bit_offset: 8
      bit_size: 8
    - name: UP_DOWN_MODE
      description: Determines counter direction.
      bit_offset: 16
      bit_size: 2
      enum: UP_DOWN_MODE
    - name: ONE_SHOT
      description: "When '0', counter runs continuous. When '1', counter is turned off by hardware when a terminal count event is generated."
      bit_offset: 18
      bit_size: 1
    - name: QUADRATURE_MODE
      description: "In QUAD mode selects quadrature encoding mode (X1/X2/X4). In PWM, PWM_DT and PWM_PR modes, these two bits can be used to invert 'dt_line_out' and 'dt_line_compl_out'. Inversion is the last step in generation of 'dt_line_out' and 'dt_line_compl_out'; i.e. a disabled output line 'dt_line_out' has the value QUADRATURE_MODE[0] and a disabled output line 'dt_line_compl_out' has the value QUADRATURE_MODE[1]."
      bit_offset: 20
      bit_size: 2
      enum: QUADRATURE_MODE
    - name: MODE
      description: Counter mode.
      bit_offset: 24
      bit_size: 3
      enum: MODE
fieldset/COUNTER:
  description: Counter count register
  fields:
    - name: COUNTER
      description: 16-bit / 32-bit counter value. It is advised to not write to this field when the counter is running.
      bit_offset: 0
      bit_size: 32
fieldset/CTRL_CLR:
  description: TCPWM control clear register
  fields:
    - name: COUNTER_ENABLED
      description: "Alias of CTRL that only allows disabling of counters. A write access: '0': Does nothing. '1': Clears respective COUNTER_ENABLED field. A read access returns CTRL.COUNTER_ENABLED."
      bit_offset: 0
      bit_size: 32
fieldset/CTRL_SET:
  description: TCPWM control set register
  fields:
    - name: COUNTER_ENABLED
      description: "Alias of CTRL that only allows enabling of counters. A write access: '0': Does nothing. '1': Sets respective COUNTER_ENABLED field. A read access returns CTRL.COUNTER_ENABLED."
      bit_offset: 0
      bit_size: 32
fieldset/INTR:
  description: Interrupt request register
  fields:
    - name: TC
      description: "Terminal count event. Set to '1', when event is detected. Write with '1' to clear bit."
      bit_offset: 0
      bit_size: 1
    - name: CC_MATCH
      description: "Counter matches CC register event. Set to '1', when event is detected. Write with '1' to clear bit."
      bit_offset: 1
      bit_size: 1
fieldset/INTR_CAUSE:
  description: TCPWM Counter interrupt cause register
  fields:
    - name: COUNTER_INT
      description: "Counters interrupt signal active. If the counter is disabled through CTRL.COUNTER_ENABLED, the associated interrupt field is immediately set to '0'."
      bit_offset: 0
      bit_size: 32
fieldset/INTR_MASK:
  description: Interrupt mask register
  fields:
    - name: TC
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 0
      bit_size: 1
    - name: CC_MATCH
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 1
      bit_size: 1
fieldset/INTR_MASKED:
  description: Interrupt masked request register
  fields:
    - name: TC
      description: Logical and of corresponding request and mask bits.
      bit_offset: 0
      bit_size: 1
    - name: CC_MATCH
      description: Logical and of corresponding request and mask bits.
      bit_offset: 1
      bit_size: 1
fieldset/INTR_SET:
  description: Interrupt set request register
  fields:
    - name: TC
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 0
      bit_size: 1
    - name: CC_MATCH
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 1
      bit_size: 1
fieldset/PERIOD:
  description: Counter period register
  fields:
    - name: PERIOD
      description: "Period value: upper value of the counter. When the counter should count for n cycles, this field should be set to n-1."
      bit_offset: 0
      bit_size: 32
fieldset/PERIOD_BUFF:
  description: Counter buffered period register
  fields:
    - name: PERIOD
      description: Additional buffer for counter PERIOD register.
      bit_offset: 0
      bit_size: 32
fieldset/STATUS:
  description: Counter status register
  fields:
    - name: DOWN
      description: "When '0', counter is counting up. When '1', counter is counting down. In QUAD mode, this field indicates the direction of the latest counter change: '0' when last incremented and '1' when last decremented."
      bit_offset: 0
      bit_size: 1
    - name: GENERIC
      description: "Generic 8-bit counter field. In PWM_DT mode, this counter is used for dead time insertion. In all other modes, this counter is used for pre-scaling the selected counter clock. PWM_DT mode can NOT use prescaled clock functionality."
      bit_offset: 8
      bit_size: 8
    - name: RUNNING
      description: "When '0', the counter is NOT running. When '1', the counter is running."
      bit_offset: 31
      bit_size: 1
fieldset/TCPWM0_CTRL:
  description: TCPWM control register
  fields:
    - name: COUNTER_ENABLED
      description: "Counter enables for counters 0 up to CNT_NR-1. '0': counter disabled. '1': counter enabled. Counter static configuration information (e.g. CTRL.MODE, all TR_CTRL0, TR_CTRL1, and TR_CTRL2 register fields) should only be modified when the counter is disabled. When a counter is disabled, command and status information associated to the counter is cleared by HW, this includes: - the associated counter triggers in the CMD register are set to '0'. - the counter's interrupt cause fields in counter's INTR register. - the counter's status fields in counter's STATUS register.. - the counter's trigger outputs ('tr_overflow', 'tr_underflow' and 'tr_compare_match'). - the counter's line outputs ('line_out' and 'line_compl_out'). In multi-core environments, use the CTRL_SET/CTRL_CLR registers to avoid race-conditions on read-modify-write attempts to this register."
      bit_offset: 0
      bit_size: 32
fieldset/TR_CTRL0:
  description: Counter trigger control register 0
  fields:
    - name: CAPTURE_SEL
      description: "Selects one of the 16 input triggers as a capture trigger. Input trigger 0 is always '0' and input trigger is always '1'. In the PWM, PWM_DT and PWM_PR modes this trigger is used to switch the values if the compare and period registers with their buffer counterparts."
      bit_offset: 0
      bit_size: 4
    - name: COUNT_SEL
      description: "Selects one of the 16 input triggers as a count trigger. In QUAD mode, this is the first phase (phi A). Default setting selects input trigger 1, which is always '1'."
      bit_offset: 4
      bit_size: 4
    - name: RELOAD_SEL
      description: "Selects one of the 16 input triggers as a reload trigger. In QUAD mode, this is the index or revolution pulse. In this mode, it will update the counter with 0x8000 (counter midpoint)."
      bit_offset: 8
      bit_size: 4
    - name: STOP_SEL
      description: "Selects one of the 16 input triggers as a stop trigger. In PWM, PWM_DT and PWM_PR modes, this is the kill trigger. In these modes, the kill trigger is used to either temporarily block the PWM outputs (PWM_STOP_ON_KILL is '0') or stop the functionality (PWM_STOP_ON_KILL is '1'). For the PWM and PWM_DT modes, the blocking of the output signals can be asynchronous (STOP_EDGE should be NO_EDGE_DET) in which case the blocking is as long as the trigger is '1' or synchronous (STOP_EDGE should be RISING_EDGE) in which case it extends till the next terminal count event."
      bit_offset: 12
      bit_size: 4
    - name: START_SEL
      description: "Selects one of the 16 input triggers as a start trigger. In QUAD mode, this is the second phase (phi B)."
      bit_offset: 16
      bit_size: 4
fieldset/TR_CTRL1:
  description: Counter trigger control register 1
  fields:
    - name: CAPTURE_EDGE
      description: A capture event will copy the counter value into the CC register.
      bit_offset: 0
      bit_size: 2
      enum: CAPTURE_EDGE
    - name: COUNT_EDGE
      description: "A counter event will increase or decrease the counter by '1'."
      bit_offset: 2
      bit_size: 2
      enum: COUNT_EDGE
    - name: RELOAD_EDGE
      description: "A reload event will initialize the counter. When counting up, the counter is initialized to '0'. When counting down, the counter is initialized with PERIOD."
      bit_offset: 4
      bit_size: 2
      enum: RELOAD_EDGE
    - name: STOP_EDGE
      description: "A stop event, will stop the counter; i.e. it will no longer be running. Stopping will NOT disable the counter."
      bit_offset: 6
      bit_size: 2
      enum: STOP_EDGE
    - name: START_EDGE
      description: A start event will start the counter; i.e. the counter will become running. Starting does NOT enable the counter. A start event will not initialize the counter whereas the reload event does.
      bit_offset: 8
      bit_size: 2
      enum: START_EDGE
fieldset/TR_CTRL2:
  description: Counter trigger control register 2
  fields:
    - name: CC_MATCH_MODE
      description: "Determines the effect of a compare match event (COUNTER equals CC register) on the 'line_out' output signals. Note that INVERT is especially useful for center aligned pulse width modulation. To generate a duty cycle of 0 percent, the counter CC register should be set to '0'. For a 100 percent duty cycle, the counter CC register should be set to larger than the counter PERIOD register."
      bit_offset: 0
      bit_size: 2
      enum: CC_MATCH_MODE
    - name: OVERFLOW_MODE
      description: "Determines the effect of a counter overflow event (COUNTER reaches PERIOD) on the 'line_out' output signals."
      bit_offset: 2
      bit_size: 2
      enum: OVERFLOW_MODE
    - name: UNDERFLOW_MODE
      description: "Determines the effect of a counter underflow event (COUNTER reaches '0') on the 'line_out' output signals."
      bit_offset: 4
      bit_size: 2
      enum: UNDERFLOW_MODE
enum/CAPTURE_EDGE:
  bit_size: 2
  variants:
    - name: RISING_EDGE
      description: Rising edge. Any rising edge generates an event.
      value: 0
    - name: FALLING_EDGE
      description: Falling edge. Any falling edge generates an event.
      value: 1
    - name: BOTH_EDGES
      description: Rising AND falling edge. Any odd amount of edges generates an event.
      value: 2
    - name: NO_EDGE_DET
      description: "No edge detection, use trigger as is."
      value: 3
enum/CC_MATCH_MODE:
  bit_size: 2
  variants:
    - name: SET
      description: "Set to '1'"
      value: 0
    - name: CLEAR
      description: "Set to '0'"
      value: 1
    - name: INVERT
      description: Invert
      value: 2
    - name: NO_CHANGE
      description: No Change
      value: 3
enum/COUNT_EDGE:
  bit_size: 2
  variants:
    - name: RISING_EDGE
      description: Rising edge. Any rising edge generates an event.
      value: 0
    - name: FALLING_EDGE
      description: Falling edge. Any falling edge generates an event.
      value: 1
    - name: BOTH_EDGES
      description: Rising AND falling edge. Any odd amount of edges generates an event.
      value: 2
    - name: NO_EDGE_DET
      description: "No edge detection, use trigger as is."
      value: 3
enum/MODE:
  bit_size: 3
  variants:
    - name: TIMER
      description: Timer mode
      value: 0
    - name: CAPTURE
      description: Capture mode
      value: 2
    - name: QUAD
      description: Quadrature encoding mode
      value: 3
    - name: PWM
      description: Pulse width modulation (PWM) mode
      value: 4
    - name: PWM_DT
      description: PWM with deadtime insertion mode
      value: 5
    - name: PWM_PR
      description: Pseudo random pulse width modulation
      value: 6
enum/OVERFLOW_MODE:
  bit_size: 2
  variants:
    - name: SET
      description: "Set to '1'"
      value: 0
    - name: CLEAR
      description: "Set to '0'"
      value: 1
    - name: INVERT
      description: Invert
      value: 2
    - name: NO_CHANGE
      description: No Change
      value: 3
enum/QUADRATURE_MODE:
  bit_size: 2
  variants:
    - name: X1
      description: X1 encoding (QUAD mode)
      value: 0
    - name: X2
      description: X2 encoding (QUAD mode)
      value: 1
    - name: X4
      description: X4 encoding (QUAD mode)
      value: 2
enum/RELOAD_EDGE:
  bit_size: 2
  variants:
    - name: RISING_EDGE
      description: Rising edge. Any rising edge generates an event.
      value: 0
    - name: FALLING_EDGE
      description: Falling edge. Any falling edge generates an event.
      value: 1
    - name: BOTH_EDGES
      description: Rising AND falling edge. Any odd amount of edges generates an event.
      value: 2
    - name: NO_EDGE_DET
      description: "No edge detection, use trigger as is."
      value: 3
enum/START_EDGE:
  bit_size: 2
  variants:
    - name: RISING_EDGE
      description: Rising edge. Any rising edge generates an event.
      value: 0
    - name: FALLING_EDGE
      description: Falling edge. Any falling edge generates an event.
      value: 1
    - name: BOTH_EDGES
      description: Rising AND falling edge. Any odd amount of edges generates an event.
      value: 2
    - name: NO_EDGE_DET
      description: "No edge detection, use trigger as is."
      value: 3
enum/STOP_EDGE:
  bit_size: 2
  variants:
    - name: RISING_EDGE
      description: Rising edge. Any rising edge generates an event.
      value: 0
    - name: FALLING_EDGE
      description: Falling edge. Any falling edge generates an event.
      value: 1
    - name: BOTH_EDGES
      description: Rising AND falling edge. Any odd amount of edges generates an event.
      value: 2
    - name: NO_EDGE_DET
      description: "No edge detection, use trigger as is."
      value: 3
enum/UNDERFLOW_MODE:
  bit_size: 2
  variants:
    - name: SET
      description: "Set to '1'"
      value: 0
    - name: CLEAR
      description: "Set to '0'"
      value: 1
    - name: INVERT
      description: Invert
      value: 2
    - name: NO_CHANGE
      description: No Change
      value: 3
enum/UP_DOWN_MODE:
  bit_size: 2
  variants:
    - name: COUNT_UP
      description: Count up (to PERIOD). An overflow event is generated when the counter changes from a state in which COUNTER equals PERIOD. A terminal count event is generated when the counter changes from a state in which COUNTER equals PERIOD.
      value: 0
    - name: COUNT_DOWN
      description: "Count down (to '0'). An underflow event is generated when the counter changes from a state in which COUNTER equals '0'. A terminal count event is generated when the counter changes from a state in which COUNTER equals '0'."
      value: 1
    - name: COUNT_UPDN1
      description: "Count up (to PERIOD), then count down (to '0'). An overflow event is generated when the counter changes from a state in which COUNTER equals PERIOD. An underflow event is generated when the counter changes from a state in which COUNTER equals '0'. A terminal count event is generated when the counter changes from a state in which COUNTER equals '0'."
      value: 2
    - name: COUNT_UPDN2
      description: "Count up (to PERIOD), then count down (to '0'). An overflow event is generated when the counter changes from a state in which COUNTER equals PERIOD. An underflow event is generated when the counter changes from a state in which COUNTER equals '0'. A terminal count event is generated when the counter changes from a state in which COUNTER equals '0' AND when the counter changes from a state in which COUNTER equals PERIOD (this counter direction can be used for PWM functionality with asymmetrical updates)."
      value: 3
