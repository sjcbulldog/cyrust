---
block/CH_STRUCT:
  description: DW channel structure
  items:
    - name: CH_CTL
      description: Channel control
      byte_offset: 0
      fieldset: CH_CTL
    - name: CH_STATUS
      description: Channel status
      byte_offset: 4
      access: Read
      fieldset: CH_STATUS
    - name: CH_IDX
      description: Channel current indices
      byte_offset: 8
      fieldset: CH_IDX
    - name: CH_CURR_PTR
      description: Channel current descriptor pointer
      byte_offset: 12
      fieldset: CH_CURR_PTR
    - name: INTR
      description: Interrupt
      byte_offset: 16
      fieldset: INTR
    - name: INTR_SET
      description: Interrupt set
      byte_offset: 20
      fieldset: INTR_SET
    - name: INTR_MASK
      description: Interrupt mask
      byte_offset: 24
      fieldset: INTR_MASK
    - name: INTR_MASKED
      description: Interrupt masked
      byte_offset: 28
      access: Read
      fieldset: INTR_MASKED
    - name: SRAM_DATA0
      description: SRAM data 0
      byte_offset: 32
      fieldset: SRAM_DATA0
    - name: SRAM_DATA1
      description: SRAM data 1
      byte_offset: 36
      fieldset: SRAM_DATA1
    - name: TR_CMD
      description: Channel software trigger
      byte_offset: 40
      fieldset: TR_CMD
block/DW0:
  description: Datawire Controller
  items:
    - name: CTL
      description: Control
      byte_offset: 0
      fieldset: CTL
    - name: STATUS
      description: Status
      byte_offset: 4
      access: Read
      fieldset: STATUS
    - name: ACT_DESCR_CTL
      description: Active descriptor control
      byte_offset: 32
      access: Read
      fieldset: ACT_DESCR_CTL
    - name: ACT_DESCR_SRC
      description: Active descriptor source
      byte_offset: 36
      access: Read
      fieldset: ACT_DESCR_SRC
    - name: ACT_DESCR_DST
      description: Active descriptor destination
      byte_offset: 40
      access: Read
      fieldset: ACT_DESCR_DST
    - name: ACT_DESCR_X_CTL
      description: Active descriptor X loop control
      byte_offset: 48
      access: Read
      fieldset: ACT_DESCR_X_CTL
    - name: ACT_DESCR_Y_CTL
      description: Active descriptor Y loop control
      byte_offset: 52
      access: Read
      fieldset: ACT_DESCR_Y_CTL
    - name: ACT_DESCR_NEXT_PTR
      description: Active descriptor next pointer
      byte_offset: 56
      access: Read
      fieldset: ACT_DESCR_NEXT_PTR
    - name: ACT_SRC
      description: Active source
      byte_offset: 64
      access: Read
      fieldset: ACT_SRC
    - name: ACT_DST
      description: Active destination
      byte_offset: 68
      access: Read
      fieldset: ACT_DST
    - name: ECC_CTL
      description: ECC control
      byte_offset: 128
      fieldset: ECC_CTL
    - name: CRC_CTL
      description: CRC control
      byte_offset: 256
      fieldset: CRC_CTL
    - name: CRC_DATA_CTL
      description: CRC data control
      byte_offset: 272
      fieldset: CRC_DATA_CTL
    - name: CRC_POL_CTL
      description: CRC polynomial control
      byte_offset: 288
      fieldset: CRC_POL_CTL
    - name: CRC_LFSR_CTL
      description: CRC LFSR control
      byte_offset: 304
      fieldset: CRC_LFSR_CTL
    - name: CRC_REM_CTL
      description: CRC remainder control
      byte_offset: 320
      fieldset: CRC_REM_CTL
    - name: CRC_REM_RESULT
      description: CRC remainder result
      byte_offset: 328
      access: Read
      fieldset: CRC_REM_RESULT
    - name: CH_STRUCT
      description: DW channel structure
      array:
        len: 29
        stride: 64
      byte_offset: 32768
      block: CH_STRUCT
fieldset/ACT_DESCR_CTL:
  description: Active descriptor control
  fields:
    - name: DATA
      description: Copy of DESCR_CTL of the currently active descriptor.
      bit_offset: 0
      bit_size: 32
fieldset/ACT_DESCR_DST:
  description: Active descriptor destination
  fields:
    - name: DATA
      description: Copy of DESCR_DST of the currently active descriptor.
      bit_offset: 0
      bit_size: 32
fieldset/ACT_DESCR_NEXT_PTR:
  description: Active descriptor next pointer
  fields:
    - name: ADDR
      description: Copy of DESCR_NEXT_PTR of the currently active descriptor.
      bit_offset: 2
      bit_size: 30
fieldset/ACT_DESCR_SRC:
  description: Active descriptor source
  fields:
    - name: DATA
      description: Copy of DESCR_SRC of the currently active descriptor.
      bit_offset: 0
      bit_size: 32
fieldset/ACT_DESCR_X_CTL:
  description: Active descriptor X loop control
  fields:
    - name: DATA
      description: Copy of DESCR_X_CTL of the currently active descriptor.
      bit_offset: 0
      bit_size: 32
fieldset/ACT_DESCR_Y_CTL:
  description: Active descriptor Y loop control
  fields:
    - name: DATA
      description: Copy of DESCR_Y_CTL of the currently active descriptor.
      bit_offset: 0
      bit_size: 32
fieldset/ACT_DST:
  description: Active destination
  fields:
    - name: DST_ADDR
      description: Current address of destination location.
      bit_offset: 0
      bit_size: 32
fieldset/ACT_SRC:
  description: Active source
  fields:
    - name: SRC_ADDR
      description: Current address of source location.
      bit_offset: 0
      bit_size: 32
fieldset/CH_CTL:
  description: Channel control
  fields:
    - name: P
      description: "User/privileged access control: '0': user mode. '1': privileged mode. This field is set with the user/privileged access control of the transaction that writes this register; i.e. the 'write data' is ignored and instead the access control is inherited from the write transaction (note the field attributes should be HW:RW, SW:R). All transactions for this channel use the P field for the user/privileged access control ('hprot[1]')."
      bit_offset: 0
      bit_size: 1
    - name: NS
      description: "Secure/on-secure access control: '0': secure. '1': non-secure. This field is set with the secure/non-secure access control of the transaction that writes this register; i.e. the 'write data' is ignored and instead the access control is inherited from the write transaction (note the field attributes should be HW:RW, SW:R). All transactions for this channel use the NS field for the secure/non-secure access control ('hprot[4]')."
      bit_offset: 1
      bit_size: 1
    - name: B
      description: "Non-bufferable/bufferable access control: '0': non-bufferable. '1': bufferable. This field is used to indicate to an AMBA bridge that a write transaction can complete without waiting for the destination to accept the write transaction data. All transactions for this channel uses the B field for the non-bufferable/bufferable access control ('hprot[2]')."
      bit_offset: 2
      bit_size: 1
    - name: PC
      description: "Protection context. This field is set with the protection context of the transaction that writes this register; i.e. the 'write data' is ignored and instead the context is inherited from the write transaction (note the field attributes should be HW:RW, SW:R). All transactions for this channel uses the PC field for the protection context."
      bit_offset: 4
      bit_size: 4
    - name: PRIO
      description: "Channel priority: '0': highest priority. '1' '2' '3': lowest priority. Channels with the same priority constitute a priority group. Priority decoding determines the highest priority pending channel. This channel is determined as follows. First, the highest priority group with pending channels is identified. Second, within this priority group, round robin arbitration is applied. Round robin arbitration (within a priority group) gives the highest priority to the lower channel indices (within the priority group)."
      bit_offset: 8
      bit_size: 2
    - name: PREEMPTABLE
      description: "Specifies if the channel is preemptable. '0': Not preemptable. '1': Preemptable. This field allows higher priority pending channels (from a higher priority group; i.e. an active channel can NOT be preempted by a pending channel in the same priority group) to preempt the active channel in between 'single transfers' (a 1D transfer consists out of X_COUNT single transfers; a 2D transfer consists out of X_COUNT*Y_COUNT single transfers). Preemption will NOT affect the pending status of channel. As a result, after completion of a higher priority activated channel, the current channel may be reactivated."
      bit_offset: 11
      bit_size: 1
    - name: ENABLED
      description: "Channel enable: '0': Disabled. The channel's trigger is ignored and the channel cannot be made pending and therefore cannot be made active. If a pending channel is disabled, the channel is made non pending. If the activate channel is disabled, the channel is de-activated (bus transactions are completed). '1': Enabled. SW sets this field to '1' to enable a specific channel. HW sets this field to '0' on an error interrupt cause (the specific error is specified by CH_STATUS.INTR_CAUSE)."
      bit_offset: 31
      bit_size: 1
fieldset/CH_CURR_PTR:
  description: Channel current descriptor pointer
  fields:
    - name: ADDR
      description: "Address of current descriptor. When this field is '0', there is no valid descriptor. Note: HW updates the current descriptor pointer CH_CURR_PTR with DESCR_NEXT_PTR after execution of the current descriptor. Note: Typically, when SW updates the current descriptor pointer CH_CURR_PTR, it also sets CH_IDX.X_IDX and CH_IDX.Y_IDX to '0'."
      bit_offset: 2
      bit_size: 30
fieldset/CH_IDX:
  description: Channel current indices
  fields:
    - name: X_IDX
      description: "Specifies the X loop index. In the range of [0, X_COUNT], with X_COUNT taken from the current descriptor. Note: HW sets this field to '0' when it updates the current descriptor pointer CH_CURR_PTR with DESCR_NEXT_PTR after execution of the current descriptor. Note: SW should set this field to '0' when it updates CH_CURR_PTR."
      bit_offset: 0
      bit_size: 8
    - name: Y_IDX
      description: "Specifies the Y loop index, with X_COUNT taken from the current descriptor. Note: HW sets this field to '0' when it updates the current descriptor pointer CH_CURR_PTR with DESCR_NEXT_PTR after execution of the current descriptor. Note: SW should set this field to '0' when it updates CH_CURR_PTR."
      bit_offset: 8
      bit_size: 8
fieldset/CH_STATUS:
  description: Channel status
  fields:
    - name: INTR_CAUSE
      description: "Specifies the source of the interrupt cause: '0': No interrupt generated '1': Interrupt based on transfer complettion configuration based on INTR_TYPE '2': Source transfer bus error '3': Destination transfer bus error '4': Source address misalignment '5': Destination address misalignment '6': Current descriptor pointer is null '7': Active channel is disabled '8': Descriptor bus error '9'-'15': Not used. For error related interrupt causes (INTR_CAUSE is '2', '3', ..., '8'), the channel is disabled (HW sets CH_CTL.ENABLED to '0')."
      bit_offset: 0
      bit_size: 4
    - name: PENDING
      description: Specifies pending DW channels; i.e. enabled channels whose trigger got activated. This field includes all channels that are in the pending state (not scheduled) or active state (scheduled and performing data transfer(s)).
      bit_offset: 31
      bit_size: 1
fieldset/CRC_CTL:
  description: CRC control
  fields:
    - name: DATA_REVERSE
      description: "Specifies the bit order in which a data Byte is processed (reversal is performed after XORing): '0': Most significant bit (bit 1) first. '1': Least significant bit (bit 0) first."
      bit_offset: 0
      bit_size: 1
    - name: REM_REVERSE
      description: "Specifies whether the remainder is bit reversed (reversal is performed after XORing): '0': No. '1': Yes."
      bit_offset: 8
      bit_size: 1
fieldset/CRC_DATA_CTL:
  description: CRC data control
  fields:
    - name: DATA_XOR
      description: "Specifies a byte mask with which each data byte is XOR'd. The XOR is performed before data reversal."
      bit_offset: 0
      bit_size: 8
fieldset/CRC_LFSR_CTL:
  description: CRC LFSR control
  fields:
    - name: LFSR32
      description: "State of a 32-bit Linear Feedback Shift Registers (LFSR) that is used to implement CRC. This register needs to be initialized by SW to provide the CRC seed value. The seed value should be aligned such that the more significant bits (bit 31 and down) contain the seed value and the less significant bits (bit 0 and up) contain padding '0's. Note that SW can write this field. This functionality can be used prevent information leakage (through either CRC_LFSR_CTL or CRC_REM_RESULT)."
      bit_offset: 0
      bit_size: 32
fieldset/CRC_POL_CTL:
  description: CRC polynomial control
  fields:
    - name: POLYNOMIAL
      description: "CRC polynomial. The polynomial is represented WITHOUT the high order bit (this bit is always assumed '1'). The polynomial should be aligned/shifted such that the more significant bits (bit 31 and down) contain the polynomial and the less significant bits (bit 0 and up) contain padding '0's. Some frequently used polynomials: - CRC32: POLYNOMIAL is 0x04c11db7 (x^32 + x^26 + x^23 + x^22 + x^16 + x^12 + x^11 + x^10 + x^8 + x^7 + x^5 + x^4 + x^2 + x + 1). - CRC16: POLYNOMIAL is 0x80050000 (x^16 + x^15 + x^2 + 1, shifted by 16 bit positions). - CRC16 CCITT: POLYNOMIAL is 0x10210000 (x^16 + x^12 + x^5 + 1, shifted by 16 bit positions)."
      bit_offset: 0
      bit_size: 32
fieldset/CRC_REM_CTL:
  description: CRC remainder control
  fields:
    - name: REM_XOR
      description: "Specifies a mask with which the CRC_LFSR_CTL.LFSR32 register is XOR'd to produce a remainder. The XOR is performed before remainder reversal."
      bit_offset: 0
      bit_size: 32
fieldset/CRC_REM_RESULT:
  description: CRC remainder result
  fields:
    - name: REM
      description: "Remainder value. The alignment of the remainder depends on CRC_REM_CTL0.REM_REVERSE: '0': the more significant bits (bit 31 and down) contain the remainder. '1': the less significant bits (bit 0 and up) contain the remainder. Note: This field is combinatorially derived from CRC_LFSR_CTL.LFSR32, CRC_CTL.REM_REVERSE and CRC_REM_CTL.REM_XOR."
      bit_offset: 0
      bit_size: 32
fieldset/CTL:
  description: Control
  fields:
    - name: ECC_EN
      description: "Enable ECC checking: '0': Disabled. '1': Enabled."
      bit_offset: 0
      bit_size: 1
    - name: ECC_INJ_EN
      description: "Enable parity injection for SRAM. When '1', the parity (ECC_CTL.PARITY) is used when a full 32-bit write is done to the ECC_CTL.WORD_ADDR word address of the SRAM."
      bit_offset: 1
      bit_size: 1
    - name: ENABLED
      description: "IP enable: '0': Disabled. Disabling the IP activates the IP's Active logic reset: Active logic and non-retention MMIO registers are reset (retention MMIO registers are not affected). '1': Enabled."
      bit_offset: 31
      bit_size: 1
fieldset/ECC_CTL:
  description: ECC control
  fields:
    - name: WORD_ADDR
      description: "Specifies the word address where an error will be injected. - On a write transfer to this SRAM word address and when CTL.ECC_INJ_EN bit is '1', the parity (PARITY) is injected."
      bit_offset: 0
      bit_size: 10
    - name: PARITY
      description: ECC parity to use for ECC error injection at address WORD_ADDR.
      bit_offset: 25
      bit_size: 7
fieldset/INTR:
  description: Interrupt
  fields:
    - name: CH
      description: "Set to '1', when event (as specified by CH_STATUS.INTR_CAUSE) is detected. Write INTR.CH field with '1', to clear bit. Write INTR_SET.CH field with '1', to set bit."
      bit_offset: 0
      bit_size: 1
fieldset/INTR_MASK:
  description: Interrupt mask
  fields:
    - name: CH
      description: Mask for corresponding field in INTR register.
      bit_offset: 0
      bit_size: 1
fieldset/INTR_MASKED:
  description: Interrupt masked
  fields:
    - name: CH
      description: Logical and of corresponding INTR and INTR_MASK fields.
      bit_offset: 0
      bit_size: 1
fieldset/INTR_SET:
  description: Interrupt set
  fields:
    - name: CH
      description: "Write INTR_SET field with '1' to set corresponding INTR.CH field (a write of '0' has no effect)."
      bit_offset: 0
      bit_size: 1
fieldset/SRAM_DATA0:
  description: SRAM data 0
  fields:
    - name: DATA
      description: N/A
      bit_offset: 0
      bit_size: 32
fieldset/SRAM_DATA1:
  description: SRAM data 1
  fields:
    - name: DATA
      description: N/A
      bit_offset: 0
      bit_size: 32
fieldset/STATUS:
  description: Status
  fields:
    - name: P
      description: "Active channel, user/privileged access control: '0': user mode. '1': privileged mode."
      bit_offset: 0
      bit_size: 1
    - name: NS
      description: "Active channel, secure/non-secure access control: '0': secure. '1': non-secure."
      bit_offset: 1
      bit_size: 1
    - name: B
      description: "Active channel, non-bufferable/bufferable access control: '0': non-bufferable '1': bufferable."
      bit_offset: 2
      bit_size: 1
    - name: PC
      description: Active channel protection context.
      bit_offset: 4
      bit_size: 4
    - name: PRIO
      description: Active channel priority.
      bit_offset: 8
      bit_size: 2
    - name: PREEMPTABLE
      description: Active channel preemptable.
      bit_offset: 11
      bit_size: 1
    - name: CH_IDX
      description: Active channel index.
      bit_offset: 16
      bit_size: 9
    - name: STATE
      description: "State of the DW controller. '0': Default/inactive state. '1': Loading descriptor. '2': Loading data element from source location. '3': Storing data element to destination location. '4': CRC functionality (only used for CRC transfer descriptor type). '5': Update of active control information (e.g. source and destination addresses) and wait for trigger de-activation. '6': Error."
      bit_offset: 28
      bit_size: 3
    - name: ACTIVE
      description: "Active channel present: '0': No. '1': Yes."
      bit_offset: 31
      bit_size: 1
fieldset/TR_CMD:
  description: Channel software trigger
  fields:
    - name: ACTIVATE
      description: "Software trigger. When written with '1', a trigger is generated which sets 'trigger pending' (only if the channel is enabled). A read always returns a 0."
      bit_offset: 0
      bit_size: 1
