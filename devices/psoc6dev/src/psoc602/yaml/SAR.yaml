---
block/SAR:
  description: SAR ADC with Sequencer
  items:
    - name: CTRL
      description: Analog control register.
      byte_offset: 0
      fieldset: CTRL
    - name: SAMPLE_CTRL
      description: Sample control register.
      byte_offset: 4
      fieldset: SAMPLE_CTRL
    - name: SAMPLE_TIME01
      description: Sample time specification ST0 and ST1
      byte_offset: 16
      fieldset: SAMPLE_TIME01
    - name: SAMPLE_TIME23
      description: Sample time specification ST2 and ST3
      byte_offset: 20
      fieldset: SAMPLE_TIME23
    - name: RANGE_THRES
      description: Global range detect threshold register.
      byte_offset: 24
      fieldset: RANGE_THRES
    - name: RANGE_COND_REG
      description: Global range detect mode register.
      byte_offset: 28
      fieldset: RANGE_COND_REG
    - name: CHAN_EN
      description: Enable bits for the channels
      byte_offset: 32
      fieldset: CHAN_EN
    - name: START_CTRL
      description: Start control register (firmware trigger).
      byte_offset: 36
      fieldset: START_CTRL
    - name: CHAN_CONFIG
      description: Channel configuration register.
      array:
        len: 16
        stride: 4
      byte_offset: 128
      fieldset: CHAN_CONFIG
    - name: CHAN_WORK
      description: Channel working data register
      array:
        len: 16
        stride: 4
      byte_offset: 256
      access: Read
      fieldset: CHAN_WORK
    - name: CHAN_RESULT
      description: Channel result data register
      array:
        len: 16
        stride: 4
      byte_offset: 384
      access: Read
      fieldset: CHAN_RESULT
    - name: CHAN_WORK_UPDATED
      description: "Channel working data register 'updated' bits"
      byte_offset: 512
      access: Read
      fieldset: CHAN_WORK_UPDATED
    - name: CHAN_RESULT_UPDATED
      description: "Channel result data register 'updated' bits"
      byte_offset: 516
      access: Read
      fieldset: CHAN_RESULT_UPDATED
    - name: CHAN_WORK_NEWVALUE
      description: "Channel working data register 'new value' bits"
      byte_offset: 520
      access: Read
      fieldset: CHAN_WORK_NEWVALUE
    - name: CHAN_RESULT_NEWVALUE
      description: "Channel result data register 'new value' bits"
      byte_offset: 524
      access: Read
      fieldset: CHAN_RESULT_NEWVALUE
    - name: INTR
      description: Interrupt request register.
      byte_offset: 528
      fieldset: INTR
    - name: INTR_SET
      description: Interrupt set request register
      byte_offset: 532
      fieldset: INTR_SET
    - name: INTR_MASK
      description: Interrupt mask register.
      byte_offset: 536
      fieldset: INTR_MASK
    - name: INTR_MASKED
      description: Interrupt masked request register
      byte_offset: 540
      access: Read
      fieldset: INTR_MASKED
    - name: SATURATE_INTR
      description: Saturate interrupt request register.
      byte_offset: 544
      fieldset: SATURATE_INTR
    - name: SATURATE_INTR_SET
      description: Saturate interrupt set request register
      byte_offset: 548
      fieldset: SATURATE_INTR_SET
    - name: SATURATE_INTR_MASK
      description: Saturate interrupt mask register.
      byte_offset: 552
      fieldset: SATURATE_INTR_MASK
    - name: SATURATE_INTR_MASKED
      description: Saturate interrupt masked request register
      byte_offset: 556
      access: Read
      fieldset: SATURATE_INTR_MASKED
    - name: RANGE_INTR
      description: Range detect interrupt request register.
      byte_offset: 560
      fieldset: RANGE_INTR
    - name: RANGE_INTR_SET
      description: Range detect interrupt set request register
      byte_offset: 564
      fieldset: RANGE_INTR_SET
    - name: RANGE_INTR_MASK
      description: Range detect interrupt mask register.
      byte_offset: 568
      fieldset: RANGE_INTR_MASK
    - name: RANGE_INTR_MASKED
      description: Range interrupt masked request register
      byte_offset: 572
      access: Read
      fieldset: RANGE_INTR_MASKED
    - name: INTR_CAUSE
      description: Interrupt cause register
      byte_offset: 576
      access: Read
      fieldset: INTR_CAUSE
    - name: INJ_CHAN_CONFIG
      description: Injection channel configuration register.
      byte_offset: 640
      fieldset: INJ_CHAN_CONFIG
    - name: INJ_RESULT
      description: Injection channel result register
      byte_offset: 656
      access: Read
      fieldset: INJ_RESULT
    - name: STATUS
      description: Current status of internal SAR registers (mostly for debug)
      byte_offset: 672
      access: Read
      fieldset: STATUS
    - name: AVG_STAT
      description: Current averaging status (for debug)
      byte_offset: 676
      access: Read
      fieldset: AVG_STAT
    - name: MUX_SWITCH0
      description: SARMUX Firmware switch controls
      byte_offset: 768
      fieldset: MUX_SWITCH0
    - name: MUX_SWITCH_CLEAR0
      description: SARMUX Firmware switch control clear
      byte_offset: 772
      fieldset: MUX_SWITCH_CLEAR0
    - name: MUX_SWITCH_DS_CTRL
      description: SARMUX switch DSI control
      byte_offset: 832
      fieldset: MUX_SWITCH_DS_CTRL
    - name: MUX_SWITCH_SQ_CTRL
      description: SARMUX switch Sar Sequencer control
      byte_offset: 836
      fieldset: MUX_SWITCH_SQ_CTRL
    - name: MUX_SWITCH_STATUS
      description: SARMUX switch status
      byte_offset: 840
      access: Read
      fieldset: MUX_SWITCH_STATUS
    - name: ANA_TRIM0
      description: Analog trim register.
      byte_offset: 3840
      fieldset: ANA_TRIM0
    - name: ANA_TRIM1
      description: Analog trim register.
      byte_offset: 3844
      fieldset: ANA_TRIM1
fieldset/ANA_TRIM0:
  description: Analog trim register.
  fields:
    - name: CAP_TRIM
      description: Attenuation cap trimming
      bit_offset: 0
      bit_size: 5
    - name: TRIMUNIT
      description: Attenuation cap trimming
      bit_offset: 5
      bit_size: 1
fieldset/ANA_TRIM1:
  description: Analog trim register.
  fields:
    - name: SAR_REF_BUF_TRIM
      description: SAR Reference buffer trim
      bit_offset: 0
      bit_size: 6
fieldset/AVG_STAT:
  description: Current averaging status (for debug)
  fields:
    - name: CUR_AVG_ACCU
      description: the current value of the averaging accumulator
      bit_offset: 0
      bit_size: 20
    - name: INTRLV_BUSY
      description: If high then the SAR is in the middle of Interleaved averaging spanning several scans. While this bit is high the Firmware should not make any changes to the configuration registers otherwise some results may be incorrect. Note that the CUR_AVG_CNT status register below gives an indication how many more scans need to be done to complete the Interleaved averaging. This bit can be cleared by changing the averaging mode to ACCUNDUMP or by disabling the SAR.
      bit_offset: 23
      bit_size: 1
    - name: CUR_AVG_CNT
      description: the current value of the averaging counter. Note that the value shown is updated after the sampling time and therefore runs ahead of the accumulator update.
      bit_offset: 24
      bit_size: 8
fieldset/CHAN_CONFIG:
  description: Channel configuration register.
  fields:
    - name: POS_PIN_ADDR
      description: Address of the pin to be sampled by this channel (connected to Vplus)
      bit_offset: 0
      bit_size: 3
    - name: POS_PORT_ADDR
      description: Address of the port that contains the pin to be sampled by this channel (connected to Vplus)
      bit_offset: 4
      bit_size: 3
      enum: POS_PORT_ADDR
    - name: DIFFERENTIAL_EN
      description: "Differential enable for this channel. If NEG_ADDR_EN=0 and this bit is 1 then POS_PIN_ADDR[0] is ignored and considered to be 0, i.e. POS_PIN_ADDR points to the even pin of a pin pair. In that case the even pin of the pair is connected to Vplus and the odd pin of the pair is connected to Vminus. POS_PORT_ADDR is used to identify the port that contains the pins. - 0: The voltage on the addressed pin is measured (Single-ended) and the resulting value is stored in the corresponding data register. - 1: The differential voltage on the addressed pin pair is measured and the resulting value is stored in the corresponding data register. (if NEG_ADDR_EN=0 then POS_PIN_ADDR[0] is ignored)."
      bit_offset: 8
      bit_size: 1
    - name: AVG_EN
      description: Averaging enable for this channel. If set the AVG_CNT and AVG_SHIFT settings are used for sampling the addressed pin(s)
      bit_offset: 10
      bit_size: 1
    - name: SAMPLE_TIME_SEL
      description: "Sample time select: select which of the 4 global sample times to use for this channel"
      bit_offset: 12
      bit_size: 2
    - name: NEG_PIN_ADDR
      description: Address of the neg pin to be sampled by this channel.
      bit_offset: 16
      bit_size: 3
    - name: NEG_PORT_ADDR
      description: Address of the neg port that contains the pin to be sampled by this channel.
      bit_offset: 20
      bit_size: 3
      enum: NEG_PORT_ADDR
    - name: NEG_ADDR_EN
      description: 1 - The NEG_PIN_ADDR and NEG_PORT_ADDR determines what drives the Vminus pin. This is a variation of differential mode with no even-odd pair limitation 0 - The NEG_SEL determines what drives the Vminus pin.
      bit_offset: 24
      bit_size: 1
    - name: DSI_OUT_EN
      description: "DSI data output enable for this channel. - 0: the conversion result for this channel is only stored in the channel data register and the corresponding CHAN_DATA_VALID bit is set. - 1: the conversion result for this channel is stored in the channel data register and the corresponding CHAN_DATA_VALID bit is set. The same data (same formatting), together with the channel number, is sent out on the DSI communication channel for processing in UDBs."
      bit_offset: 31
      bit_size: 1
fieldset/CHAN_EN:
  description: Enable bits for the channels
  fields:
    - name: CHAN_EN
      description: "Channel enable. - 0: the corresponding channel is disabled. - 1: the corresponding channel is enabled, it will be included in the next scan."
      bit_offset: 0
      bit_size: 16
fieldset/CHAN_RESULT:
  description: Channel result data register
  fields:
    - name: RESULT
      description: SAR conversion result of the channel. The data is copied here from the WORK field after all enabled channels in this scan have been sampled.
      bit_offset: 0
      bit_size: 16
    - name: CHAN_RESULT_NEWVALUE_MIR
      description: mirror bit of corresponding bit in SAR_CHAN_RESULT_NEWVALUE register
      bit_offset: 27
      bit_size: 1
    - name: SATURATE_INTR_MIR
      description: mirror bit of corresponding bit in SAR_SATURATE_INTR register
      bit_offset: 29
      bit_size: 1
    - name: RANGE_INTR_MIR
      description: mirror bit of corresponding bit in SAR_RANGE_INTR register
      bit_offset: 30
      bit_size: 1
    - name: CHAN_RESULT_UPDATED_MIR
      description: mirror bit of corresponding bit in SAR_CHAN_RESULT_UPDATED register
      bit_offset: 31
      bit_size: 1
fieldset/CHAN_RESULT_NEWVALUE:
  description: "Channel result data register 'new value' bits"
  fields:
    - name: CHAN_RESULT_NEWVALUE
      description: "If set the corresponding RESULT data received a new value, i.e. was sampled during the last scan and data was valid. In case of a UAB this New Value bit reflects the value of UAB.valid output, for anything else the data is always valid. In case of averaging this New Value bit is an OR of all the valid bits received by each conversion."
      bit_offset: 0
      bit_size: 16
fieldset/CHAN_RESULT_UPDATED:
  description: "Channel result data register 'updated' bits"
  fields:
    - name: CHAN_RESULT_UPDATED
      description: "If set the corresponding RESULT register was updated, i.e. was sampled during the previous scan and, in case of Interleaved averaging, reached the averaging count. If this bit is low then either the channel is not enabled or the averaging count is not yet reached for Interleaved averaging."
      bit_offset: 0
      bit_size: 16
fieldset/CHAN_WORK:
  description: Channel working data register
  fields:
    - name: WORK
      description: SAR conversion working data of the channel. The data is written here right after sampling this channel.
      bit_offset: 0
      bit_size: 16
    - name: CHAN_WORK_NEWVALUE_MIR
      description: mirror bit of corresponding bit in SAR_CHAN_WORK_NEWVALUE register
      bit_offset: 27
      bit_size: 1
    - name: CHAN_WORK_UPDATED_MIR
      description: mirror bit of corresponding bit in SAR_CHAN_WORK_UPDATED register
      bit_offset: 31
      bit_size: 1
fieldset/CHAN_WORK_NEWVALUE:
  description: "Channel working data register 'new value' bits"
  fields:
    - name: CHAN_WORK_NEWVALUE
      description: "If set the corresponding WORK data received a new value, i.e. was already sampled during the current scan and data was valid. In case of a UAB this New Value bit reflects the value of UAB.valid output, for anything else the data is always valid. In case of averaging this New Value bit is an OR of all the valid bits received by each conversion."
      bit_offset: 0
      bit_size: 16
fieldset/CHAN_WORK_UPDATED:
  description: "Channel working data register 'updated' bits"
  fields:
    - name: CHAN_WORK_UPDATED
      description: "If set the corresponding WORK register was updated, i.e. was already sampled during the current scan and, in case of Interleaved averaging, reached the averaging count. If this bit is low then either the channel is not enabled or the averaging count is not yet reached for Interleaved averaging."
      bit_offset: 0
      bit_size: 16
fieldset/CTRL:
  description: Analog control register.
  fields:
    - name: PWR_CTRL_VREF
      description: VREF buffer low power mode.
      bit_offset: 0
      bit_size: 3
      enum: PWR_CTRL_VREF
    - name: VREF_SEL
      description: SARADC internal VREF selection.
      bit_offset: 4
      bit_size: 3
      enum: VREF_SEL
    - name: VREF_BYP_CAP_EN
      description: VREF bypass cap enable for when VREF buffer is on
      bit_offset: 7
      bit_size: 1
    - name: NEG_SEL
      description: SARADC internal NEG selection for Single ended conversion
      bit_offset: 9
      bit_size: 3
      enum: NEG_SEL
    - name: SAR_HW_CTRL_NEGVREF
      description: "Hardware control: 0=only firmware control, 1=hardware control masked by firmware setting for VREF to NEG switch."
      bit_offset: 13
      bit_size: 1
    - name: COMP_DLY
      description: Set the comparator latch delay in accordance with SAR conversion rate
      bit_offset: 14
      bit_size: 2
      enum: COMP_DLY
    - name: SPARE
      description: "Spare controls, not yet designated, for late changes done with an ECO"
      bit_offset: 16
      bit_size: 4
    - name: BOOSTPUMP_EN
      description: deprecated
      bit_offset: 20
      bit_size: 1
    - name: REFBUF_EN
      description: "For normal ADC operation this bit must be set, for all reference choices - internal, external or vdda based reference. Setting this bit is critical to proper function of switches inside SARREF block."
      bit_offset: 21
      bit_size: 1
    - name: COMP_PWR
      description: Comparator power mode.
      bit_offset: 24
      bit_size: 3
      enum: COMP_PWR
    - name: DEEPSLEEP_ON
      description: "- 0: SARMUX IP disabled off during DeepSleep power mode - 1: SARMUX IP remains enabled during DeepSleep power mode (if ENABLED=1)"
      bit_offset: 27
      bit_size: 1
    - name: DSI_SYNC_CONFIG
      description: "- 0: bypass clock domain synchronization of the DSI config signals. - 1: synchronize the DSI config signals to peripheral clock domain."
      bit_offset: 28
      bit_size: 1
    - name: DSI_MODE
      description: "SAR sequencer takes configuration from DSI signals (note this also has the same effect as SWITCH_DISABLE==1) - 0: Normal mode, SAR sequencer operates according to CHAN_EN enables and CHAN_CONFIG channel configurations - 1: CHAN_EN, INJ_START_EN and channel configurations in CHAN_CONFIG and INJ_CHAN_CONFIG are ignored"
      bit_offset: 29
      bit_size: 1
    - name: SWITCH_DISABLE
      description: "Disable SAR sequencer from enabling routing switches (note DSI and firmware can always close switches independent of this control) - 0: Normal mode, SAR sequencer changes switches according to pin address in channel configurations - 1: Switches disabled, SAR sequencer does not enable any switches, it is the responsibility of the firmware or UDBs (through DSI) to set the switches to route the signal to be converted through the SARMUX"
      bit_offset: 30
      bit_size: 1
    - name: ENABLED
      description: "- 0: SAR IP disabled (put analog in power down and stop clocks), also can clear FW_TRIGGER and INJ_START_EN (if not tailgating) on write. - 1: SAR IP enabled."
      bit_offset: 31
      bit_size: 1
fieldset/INJ_CHAN_CONFIG:
  description: Injection channel configuration register.
  fields:
    - name: INJ_PIN_ADDR
      description: "Address of the pin to be sampled by this injection channel. If differential is enabled then INJ_PIN_ADDR[0] is ignored and considered to be 0, i.e. INJ_PIN_ADDR points to the even pin of a pin pair."
      bit_offset: 0
      bit_size: 3
    - name: INJ_PORT_ADDR
      description: Address of the port that contains the pin to be sampled by this channel.
      bit_offset: 4
      bit_size: 3
      enum: INJ_PORT_ADDR
    - name: INJ_DIFFERENTIAL_EN
      description: "Differential enable for this channel. - 0: The voltage on the addressed pin is measured (Single-ended) and the resulting value is stored in the corresponding data register. - 1: The differential voltage on the addressed pin pair is measured and the resulting value is stored in the corresponding data register. (INJ_PIN_ADDR[0] is ignored)."
      bit_offset: 8
      bit_size: 1
    - name: INJ_AVG_EN
      description: Averaging enable for this channel. If set the AVG_CNT and AVG_SHIFT settings are used for sampling the addressed pin(s)
      bit_offset: 10
      bit_size: 1
    - name: INJ_SAMPLE_TIME_SEL
      description: "Injection sample time select: select which of the 4 global sample times to use for this channel"
      bit_offset: 12
      bit_size: 2
    - name: INJ_TAILGATING
      description: "Injection channel tailgating. - 0: no tailgating for this channel, SAR is immediately triggered when the INJ_START_EN bit is set if the SAR is not busy. If the SAR is busy, the INJ channel addressed pin is sampled at the end of the current scan. - 1: injection channel tailgating. The addressed pin is sampled after the next trigger and after all enabled channels have been scanned."
      bit_offset: 30
      bit_size: 1
    - name: INJ_START_EN
      description: Set by firmware to enable the injection channel. If INJ_TAILGATING is not set this bit also functions as trigger for this channel. Cleared by hardware after this channel has been sampled (i.e. this channel is always one shot even if CONTINUOUS is set). Also cleared if the SAR is disabled.
      bit_offset: 31
      bit_size: 1
fieldset/INJ_RESULT:
  description: Injection channel result register
  fields:
    - name: INJ_RESULT
      description: SAR conversion result of the channel.
      bit_offset: 0
      bit_size: 16
    - name: INJ_NEWVALUE
      description: "The data in this register received a new value (only relevant for UAB, this bit shows the value of the UAB valid bit)"
      bit_offset: 27
      bit_size: 1
    - name: INJ_COLLISION_INTR_MIR
      description: mirror bit of corresponding bit in SAR_INTR register
      bit_offset: 28
      bit_size: 1
    - name: INJ_SATURATE_INTR_MIR
      description: mirror bit of corresponding bit in SAR_INTR register
      bit_offset: 29
      bit_size: 1
    - name: INJ_RANGE_INTR_MIR
      description: mirror bit of corresponding bit in SAR_INTR register
      bit_offset: 30
      bit_size: 1
    - name: INJ_EOC_INTR_MIR
      description: mirror bit of corresponding bit in SAR_INTR register
      bit_offset: 31
      bit_size: 1
fieldset/INTR:
  description: Interrupt request register.
  fields:
    - name: EOS_INTR
      description: "End Of Scan Interrupt: hardware sets this interrupt after completing a scan of all the enabled channels. Write with '1' to clear bit."
      bit_offset: 0
      bit_size: 1
    - name: OVERFLOW_INTR
      description: "Overflow Interrupt: hardware sets this interrupt when it sets a new EOS_INTR while that bit was not yet cleared by the firmware. Write with '1' to clear bit."
      bit_offset: 1
      bit_size: 1
    - name: FW_COLLISION_INTR
      description: "Firmware Collision Interrupt: hardware sets this interrupt when FW_TRIGGER is asserted while the SAR is BUSY. Raising this interrupt is delayed to when the scan caused by the FW_TRIGGER has been completed, i.e. not when the preceding scan with which this trigger collided is completed. When this interrupt is set it implies that the channels were sampled later than was intended (jitter). Write with '1' to clear bit."
      bit_offset: 2
      bit_size: 1
    - name: DSI_COLLISION_INTR
      description: "DSI Collision Interrupt: hardware sets this interrupt when the DSI trigger signal is asserted while the SAR is BUSY. Raising this interrupt is delayed to when the scan caused by the DSI trigger has been completed, i.e. not when the preceding scan with which this trigger collided is completed. When this interrupt is set it implies that the channels were sampled later than was intended (jitter). Write with '1' to clear bit."
      bit_offset: 3
      bit_size: 1
    - name: INJ_EOC_INTR
      description: "Injection End of Conversion Interrupt: hardware sets this interrupt after completing the conversion for the injection channel (irrespective of if tailgating was used). Write with '1' to clear bit."
      bit_offset: 4
      bit_size: 1
    - name: INJ_SATURATE_INTR
      description: "Injection Saturation Interrupt: hardware sets this interrupt if an injection conversion result (before averaging) is either 0x000 or 0xFFF, this is an indication that the ADC likely saturated. Write with '1' to clear bit."
      bit_offset: 5
      bit_size: 1
    - name: INJ_RANGE_INTR
      description: "Injection Range detect Interrupt: hardware sets this interrupt if the injection conversion result (after averaging) met the condition specified by the SAR_RANGE registers. Write with '1' to clear bit."
      bit_offset: 6
      bit_size: 1
    - name: INJ_COLLISION_INTR
      description: "Injection Collision Interrupt: hardware sets this interrupt when the injection trigger signal is asserted (INJ_START_EN==1 && INJ_TAILGATING==0) while the SAR is BUSY. Raising this interrupt is delayed to when the sampling of the injection channel has been completed, i.e. not when the preceding scan with which this trigger collided is completed. When this interrupt is set it implies that the injection channel was sampled later than was intended. Write with '1' to clear bit."
      bit_offset: 7
      bit_size: 1
fieldset/INTR_CAUSE:
  description: Interrupt cause register
  fields:
    - name: EOS_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 0
      bit_size: 1
    - name: OVERFLOW_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 1
      bit_size: 1
    - name: FW_COLLISION_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 2
      bit_size: 1
    - name: DSI_COLLISION_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 3
      bit_size: 1
    - name: INJ_EOC_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 4
      bit_size: 1
    - name: INJ_SATURATE_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 5
      bit_size: 1
    - name: INJ_RANGE_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 6
      bit_size: 1
    - name: INJ_COLLISION_MASKED_MIR
      description: Mirror copy of corresponding bit in SAR_INTR_MASKED
      bit_offset: 7
      bit_size: 1
    - name: SATURATE_MASKED_RED
      description: Reduction OR of all SAR_SATURATION_INTR_MASKED bits
      bit_offset: 30
      bit_size: 1
    - name: RANGE_MASKED_RED
      description: Reduction OR of all SAR_RANGE_INTR_MASKED bits
      bit_offset: 31
      bit_size: 1
fieldset/INTR_MASK:
  description: Interrupt mask register.
  fields:
    - name: EOS_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 0
      bit_size: 1
    - name: OVERFLOW_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 1
      bit_size: 1
    - name: FW_COLLISION_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 2
      bit_size: 1
    - name: DSI_COLLISION_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 3
      bit_size: 1
    - name: INJ_EOC_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 4
      bit_size: 1
    - name: INJ_SATURATE_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 5
      bit_size: 1
    - name: INJ_RANGE_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 6
      bit_size: 1
    - name: INJ_COLLISION_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 7
      bit_size: 1
fieldset/INTR_MASKED:
  description: Interrupt masked request register
  fields:
    - name: EOS_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 0
      bit_size: 1
    - name: OVERFLOW_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 1
      bit_size: 1
    - name: FW_COLLISION_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 2
      bit_size: 1
    - name: DSI_COLLISION_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 3
      bit_size: 1
    - name: INJ_EOC_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 4
      bit_size: 1
    - name: INJ_SATURATE_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 5
      bit_size: 1
    - name: INJ_RANGE_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 6
      bit_size: 1
    - name: INJ_COLLISION_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 7
      bit_size: 1
fieldset/INTR_SET:
  description: Interrupt set request register
  fields:
    - name: EOS_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 0
      bit_size: 1
    - name: OVERFLOW_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 1
      bit_size: 1
    - name: FW_COLLISION_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 2
      bit_size: 1
    - name: DSI_COLLISION_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 3
      bit_size: 1
    - name: INJ_EOC_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 4
      bit_size: 1
    - name: INJ_SATURATE_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 5
      bit_size: 1
    - name: INJ_RANGE_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 6
      bit_size: 1
    - name: INJ_COLLISION_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 7
      bit_size: 1
fieldset/MUX_SWITCH0:
  description: SARMUX Firmware switch controls
  fields:
    - name: MUX_FW_P0_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P0 and vplus signal. Write with '1' to set bit."
      bit_offset: 0
      bit_size: 1
    - name: MUX_FW_P1_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P1 and vplus signal. Write with '1' to set bit."
      bit_offset: 1
      bit_size: 1
    - name: MUX_FW_P2_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P2 and vplus signal. Write with '1' to set bit."
      bit_offset: 2
      bit_size: 1
    - name: MUX_FW_P3_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P3 and vplus signal. Write with '1' to set bit."
      bit_offset: 3
      bit_size: 1
    - name: MUX_FW_P4_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P4 and vplus signal. Write with '1' to set bit."
      bit_offset: 4
      bit_size: 1
    - name: MUX_FW_P5_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P5 and vplus signal. Write with '1' to set bit."
      bit_offset: 5
      bit_size: 1
    - name: MUX_FW_P6_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P6 and vplus signal. Write with '1' to set bit."
      bit_offset: 6
      bit_size: 1
    - name: MUX_FW_P7_VPLUS
      description: "Firmware control: 0=open, 1=close switch between pin P7 and vplus signal. Write with '1' to set bit."
      bit_offset: 7
      bit_size: 1
    - name: MUX_FW_P0_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P0 and vminus signal. Write with '1' to set bit."
      bit_offset: 8
      bit_size: 1
    - name: MUX_FW_P1_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P1 and vminus signal. Write with '1' to set bit."
      bit_offset: 9
      bit_size: 1
    - name: MUX_FW_P2_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P2 and vminus signal. Write with '1' to set bit."
      bit_offset: 10
      bit_size: 1
    - name: MUX_FW_P3_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P3 and vminus signal. Write with '1' to set bit."
      bit_offset: 11
      bit_size: 1
    - name: MUX_FW_P4_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P4 and vminus signal. Write with '1' to set bit."
      bit_offset: 12
      bit_size: 1
    - name: MUX_FW_P5_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P5 and vminus signal. Write with '1' to set bit."
      bit_offset: 13
      bit_size: 1
    - name: MUX_FW_P6_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P6 and vminus signal. Write with '1' to set bit."
      bit_offset: 14
      bit_size: 1
    - name: MUX_FW_P7_VMINUS
      description: "Firmware control: 0=open, 1=close switch between pin P7 and vminus signal. Write with '1' to set bit."
      bit_offset: 15
      bit_size: 1
    - name: MUX_FW_VSSA_VMINUS
      description: "Firmware control: 0=open, 1=close switch between vssa_kelvin and vminus signal. Write with '1' to set bit."
      bit_offset: 16
      bit_size: 1
    - name: MUX_FW_TEMP_VPLUS
      description: "Firmware control: 0=open, 1=close switch between temperature sensor and vplus signal, also powers on the temperature sensor. Write with '1' to set bit."
      bit_offset: 17
      bit_size: 1
    - name: MUX_FW_AMUXBUSA_VPLUS
      description: "Firmware control: 0=open, 1=close switch between amuxbusa and vplus signal. Write with '1' to set bit."
      bit_offset: 18
      bit_size: 1
    - name: MUX_FW_AMUXBUSB_VPLUS
      description: "Firmware control: 0=open, 1=close switch between amuxbusb and vplus signal. Write with '1' to set bit."
      bit_offset: 19
      bit_size: 1
    - name: MUX_FW_AMUXBUSA_VMINUS
      description: "Firmware control: 0=open, 1=close switch between amuxbusa and vminus signal. Write with '1' to set bit."
      bit_offset: 20
      bit_size: 1
    - name: MUX_FW_AMUXBUSB_VMINUS
      description: "Firmware control: 0=open, 1=close switch between amuxbusb and vminus signal. Write with '1' to set bit."
      bit_offset: 21
      bit_size: 1
    - name: MUX_FW_SARBUS0_VPLUS
      description: "Firmware control: 0=open, 1=close switch between sarbus0 and vplus signal. Write with '1' to set bit."
      bit_offset: 22
      bit_size: 1
    - name: MUX_FW_SARBUS1_VPLUS
      description: "Firmware control: 0=open, 1=close switch between sarbus1 and vplus signal. Write with '1' to set bit."
      bit_offset: 23
      bit_size: 1
    - name: MUX_FW_SARBUS0_VMINUS
      description: "Firmware control: 0=open, 1=close switch between sarbus0 and vminus signal. Write with '1' to set bit."
      bit_offset: 24
      bit_size: 1
    - name: MUX_FW_SARBUS1_VMINUS
      description: "Firmware control: 0=open, 1=close switch between sarbus1 and vminus signal. Write with '1' to set bit."
      bit_offset: 25
      bit_size: 1
    - name: MUX_FW_P4_COREIO0
      description: "Firmware control: 0=open, 1=close switch between P4 and coreio0 signal. Write with '1' to set bit."
      bit_offset: 26
      bit_size: 1
    - name: MUX_FW_P5_COREIO1
      description: "Firmware control: 0=open, 1=close switch between P5 and coreio1 signal. Write with '1' to set bit."
      bit_offset: 27
      bit_size: 1
    - name: MUX_FW_P6_COREIO2
      description: "Firmware control: 0=open, 1=close switch between P6 and coreio2 signal. Write with '1' to set bit."
      bit_offset: 28
      bit_size: 1
    - name: MUX_FW_P7_COREIO3
      description: "Firmware control: 0=open, 1=close switch between P7 and coreio3 signal. Write with '1' to set bit."
      bit_offset: 29
      bit_size: 1
fieldset/MUX_SWITCH_CLEAR0:
  description: SARMUX Firmware switch control clear
  fields:
    - name: MUX_FW_P0_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 0
      bit_size: 1
    - name: MUX_FW_P1_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 1
      bit_size: 1
    - name: MUX_FW_P2_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 2
      bit_size: 1
    - name: MUX_FW_P3_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 3
      bit_size: 1
    - name: MUX_FW_P4_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 4
      bit_size: 1
    - name: MUX_FW_P5_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 5
      bit_size: 1
    - name: MUX_FW_P6_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 6
      bit_size: 1
    - name: MUX_FW_P7_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 7
      bit_size: 1
    - name: MUX_FW_P0_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 8
      bit_size: 1
    - name: MUX_FW_P1_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 9
      bit_size: 1
    - name: MUX_FW_P2_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 10
      bit_size: 1
    - name: MUX_FW_P3_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 11
      bit_size: 1
    - name: MUX_FW_P4_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 12
      bit_size: 1
    - name: MUX_FW_P5_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 13
      bit_size: 1
    - name: MUX_FW_P6_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 14
      bit_size: 1
    - name: MUX_FW_P7_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 15
      bit_size: 1
    - name: MUX_FW_VSSA_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 16
      bit_size: 1
    - name: MUX_FW_TEMP_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 17
      bit_size: 1
    - name: MUX_FW_AMUXBUSA_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 18
      bit_size: 1
    - name: MUX_FW_AMUXBUSB_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 19
      bit_size: 1
    - name: MUX_FW_AMUXBUSA_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 20
      bit_size: 1
    - name: MUX_FW_AMUXBUSB_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 21
      bit_size: 1
    - name: MUX_FW_SARBUS0_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 22
      bit_size: 1
    - name: MUX_FW_SARBUS1_VPLUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 23
      bit_size: 1
    - name: MUX_FW_SARBUS0_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 24
      bit_size: 1
    - name: MUX_FW_SARBUS1_VMINUS
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 25
      bit_size: 1
    - name: MUX_FW_P4_COREIO0
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 26
      bit_size: 1
    - name: MUX_FW_P5_COREIO1
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 27
      bit_size: 1
    - name: MUX_FW_P6_COREIO2
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 28
      bit_size: 1
    - name: MUX_FW_P7_COREIO3
      description: "Write '1' to clear corresponding bit in MUX_SWITCH0"
      bit_offset: 29
      bit_size: 1
fieldset/MUX_SWITCH_DS_CTRL:
  description: SARMUX switch DSI control
  fields:
    - name: MUX_DS_CTRL_P0
      description: for P0 switches
      bit_offset: 0
      bit_size: 1
    - name: MUX_DS_CTRL_P1
      description: for P1 switches
      bit_offset: 1
      bit_size: 1
    - name: MUX_DS_CTRL_P2
      description: for P2 switches
      bit_offset: 2
      bit_size: 1
    - name: MUX_DS_CTRL_P3
      description: for P3 switches
      bit_offset: 3
      bit_size: 1
    - name: MUX_DS_CTRL_P4
      description: for P4 switches
      bit_offset: 4
      bit_size: 1
    - name: MUX_DS_CTRL_P5
      description: for P5 switches
      bit_offset: 5
      bit_size: 1
    - name: MUX_DS_CTRL_P6
      description: for P6 switches
      bit_offset: 6
      bit_size: 1
    - name: MUX_DS_CTRL_P7
      description: for P7 switches
      bit_offset: 7
      bit_size: 1
    - name: MUX_DS_CTRL_VSSA
      description: for vssa switch
      bit_offset: 16
      bit_size: 1
    - name: MUX_DS_CTRL_TEMP
      description: for temp switch
      bit_offset: 17
      bit_size: 1
    - name: MUX_DS_CTRL_AMUXBUSA
      description: for amuxbusa switch
      bit_offset: 18
      bit_size: 1
    - name: MUX_DS_CTRL_AMUXBUSB
      description: for amuxbusb switches
      bit_offset: 19
      bit_size: 1
    - name: MUX_DS_CTRL_SARBUS0
      description: for sarbus0 switch
      bit_offset: 22
      bit_size: 1
    - name: MUX_DS_CTRL_SARBUS1
      description: for sarbus1 switch
      bit_offset: 23
      bit_size: 1
fieldset/MUX_SWITCH_SQ_CTRL:
  description: SARMUX switch Sar Sequencer control
  fields:
    - name: MUX_SQ_CTRL_P0
      description: for P0 switches
      bit_offset: 0
      bit_size: 1
    - name: MUX_SQ_CTRL_P1
      description: for P1 switches
      bit_offset: 1
      bit_size: 1
    - name: MUX_SQ_CTRL_P2
      description: for P2 switches
      bit_offset: 2
      bit_size: 1
    - name: MUX_SQ_CTRL_P3
      description: for P3 switches
      bit_offset: 3
      bit_size: 1
    - name: MUX_SQ_CTRL_P4
      description: for P4 switches
      bit_offset: 4
      bit_size: 1
    - name: MUX_SQ_CTRL_P5
      description: for P5 switches
      bit_offset: 5
      bit_size: 1
    - name: MUX_SQ_CTRL_P6
      description: for P6 switches
      bit_offset: 6
      bit_size: 1
    - name: MUX_SQ_CTRL_P7
      description: for P7 switches
      bit_offset: 7
      bit_size: 1
    - name: MUX_SQ_CTRL_VSSA
      description: for vssa switch
      bit_offset: 16
      bit_size: 1
    - name: MUX_SQ_CTRL_TEMP
      description: for temp switch
      bit_offset: 17
      bit_size: 1
    - name: MUX_SQ_CTRL_AMUXBUSA
      description: for amuxbusa switch
      bit_offset: 18
      bit_size: 1
    - name: MUX_SQ_CTRL_AMUXBUSB
      description: for amuxbusb switches
      bit_offset: 19
      bit_size: 1
    - name: MUX_SQ_CTRL_SARBUS0
      description: for sarbus0 switch
      bit_offset: 22
      bit_size: 1
    - name: MUX_SQ_CTRL_SARBUS1
      description: for sarbus1 switch
      bit_offset: 23
      bit_size: 1
fieldset/MUX_SWITCH_STATUS:
  description: SARMUX switch status
  fields:
    - name: MUX_FW_P0_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 0
      bit_size: 1
    - name: MUX_FW_P1_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 1
      bit_size: 1
    - name: MUX_FW_P2_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 2
      bit_size: 1
    - name: MUX_FW_P3_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 3
      bit_size: 1
    - name: MUX_FW_P4_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 4
      bit_size: 1
    - name: MUX_FW_P5_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 5
      bit_size: 1
    - name: MUX_FW_P6_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 6
      bit_size: 1
    - name: MUX_FW_P7_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 7
      bit_size: 1
    - name: MUX_FW_P0_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 8
      bit_size: 1
    - name: MUX_FW_P1_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 9
      bit_size: 1
    - name: MUX_FW_P2_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 10
      bit_size: 1
    - name: MUX_FW_P3_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 11
      bit_size: 1
    - name: MUX_FW_P4_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 12
      bit_size: 1
    - name: MUX_FW_P5_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 13
      bit_size: 1
    - name: MUX_FW_P6_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 14
      bit_size: 1
    - name: MUX_FW_P7_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 15
      bit_size: 1
    - name: MUX_FW_VSSA_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 16
      bit_size: 1
    - name: MUX_FW_TEMP_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 17
      bit_size: 1
    - name: MUX_FW_AMUXBUSA_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 18
      bit_size: 1
    - name: MUX_FW_AMUXBUSB_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 19
      bit_size: 1
    - name: MUX_FW_AMUXBUSA_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 20
      bit_size: 1
    - name: MUX_FW_AMUXBUSB_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 21
      bit_size: 1
    - name: MUX_FW_SARBUS0_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 22
      bit_size: 1
    - name: MUX_FW_SARBUS1_VPLUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 23
      bit_size: 1
    - name: MUX_FW_SARBUS0_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 24
      bit_size: 1
    - name: MUX_FW_SARBUS1_VMINUS
      description: switch status of corresponding bit in MUX_SWITCH0
      bit_offset: 25
      bit_size: 1
fieldset/RANGE_COND_REG:
  description: Global range detect mode register.
  fields:
    - name: RANGE_COND
      description: Range condition select.
      bit_offset: 30
      bit_size: 2
      enum: RANGE_COND
fieldset/RANGE_INTR:
  description: Range detect interrupt request register.
  fields:
    - name: RANGE_INTR
      description: "Range detect Interrupt: hardware sets this interrupt for each channel if the conversion result (after averaging) of that channel met the condition specified by the SAR_RANGE registers. Write with '1' to clear bit."
      bit_offset: 0
      bit_size: 16
fieldset/RANGE_INTR_MASK:
  description: Range detect interrupt mask register.
  fields:
    - name: RANGE_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 0
      bit_size: 16
fieldset/RANGE_INTR_MASKED:
  description: Range interrupt masked request register
  fields:
    - name: RANGE_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 0
      bit_size: 16
fieldset/RANGE_INTR_SET:
  description: Range detect interrupt set request register
  fields:
    - name: RANGE_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 0
      bit_size: 16
fieldset/RANGE_THRES:
  description: Global range detect threshold register.
  fields:
    - name: RANGE_LOW
      description: Low threshold for range detect.
      bit_offset: 0
      bit_size: 16
    - name: RANGE_HIGH
      description: High threshold for range detect.
      bit_offset: 16
      bit_size: 16
fieldset/SAMPLE_CTRL:
  description: Sample control register.
  fields:
    - name: LEFT_ALIGN
      description: "Left align data in data[15:0], default data is right aligned in data[11:0], with sign extension to 16 bits if the channel is differential."
      bit_offset: 1
      bit_size: 1
    - name: SINGLE_ENDED_SIGNED
      description: "Output data from a single ended conversion as a signed value If AVG_MODE = 1 (Interleaved averaging), then SINGLE_ENDED_SIGNED must be configured identically to DIFFERENTIAL_SIGNED."
      bit_offset: 2
      bit_size: 1
      enum: SINGLE_ENDED_SIGNED
    - name: DIFFERENTIAL_SIGNED
      description: "Output data from a differential conversion as a signed value when DIFFERENTIAL_EN or NEG_ADDR_EN is set to 1 If AVG_MODE = 1 (Interleaved averaging), then DIFFERENTIAL_SIGNED must be configured identically to SINGLE_ENDED_SIGNED."
      bit_offset: 3
      bit_size: 1
      enum: DIFFERENTIAL_SIGNED
    - name: AVG_CNT
      description: "Averaging Count for channels that have averaging enabled (AVG_EN). A channel will be sampled (1<<(AVG_CNT+1)) = [2..256] times. - In ACCUNDUMP mode (1st order accumulate and dump filter) a channel will be sampled back to back, the average result is calculated and stored and then the next enabled channel is sampled. If shifting is not enabled (AVG_SHIFT=0) then the result is forced to shift right so that is fits in 16 bits, so right shift is done by max(0,AVG_CNT-3). - In INTERLEAVED mode one sample is taken per triggered scan, only in the scan where the final averaging count is reached a valid average is calculated and stored in the RESULT register (by definition the same scan for all the channels that have averaging enabled). In all other scans the RESULT register for averaged channels will have an invalid result and the intermediate accumulated value is stored in the 16-bit WORK register. In this mode make sure that the averaging count is low enough to ensure that the intermediate value does not exceed 16-bits otherwise the MSBs will be lost. So for a 12-bit resolution the averaging count should be set to 16 or less (AVG_CNT=<3)."
      bit_offset: 4
      bit_size: 3
    - name: AVG_SHIFT
      description: "Averaging shifting: after averaging the result is shifted right to fit in 12 bits."
      bit_offset: 7
      bit_size: 1
    - name: AVG_MODE
      description: "Averaging mode, in DSI mode this bit is ignored and only AccuNDump mode is available."
      bit_offset: 8
      bit_size: 1
      enum: AVG_MODE
    - name: CONTINUOUS
      description: "- 0: Wait for next FW_TRIGGER (one shot) or hardware trigger (e.g. from TPWM for periodic triggering) before scanning enabled channels. - 1: Continuously scan enabled channels, ignore triggers."
      bit_offset: 16
      bit_size: 1
    - name: DSI_TRIGGER_EN
      description: "- 0: firmware trigger only: disable hardware trigger tr_sar_in. - 1: enable hardware trigger tr_sar_in (e.g. from TCPWM, GPIO or UDB)."
      bit_offset: 17
      bit_size: 1
    - name: DSI_TRIGGER_LEVEL
      description: "- 0: trigger signal is a pulse input, a positive edge detected on the trigger signal triggers a new scan. - 1: trigger signal is a level input, as long as the trigger signal remains high the SAR will do continuous scans."
      bit_offset: 18
      bit_size: 1
    - name: DSI_SYNC_TRIGGER
      description: "- 0: bypass clock domain synchronization of the trigger signal. - 1: synchronize the trigger signal to the SAR clock domain, if needed an edge detect is done in the peripheral clock domain."
      bit_offset: 19
      bit_size: 1
    - name: UAB_SCAN_MODE
      description: Select whether UABs are scheduled or unscheduled. When no UAB is scanned this selection is ignored.
      bit_offset: 22
      bit_size: 1
      enum: UAB_SCAN_MODE
    - name: REPEAT_INVALID
      description: "For unscheduled UAB_SCAN_MODE only, do the following if an invalid sample is received: - 0: use the last known valid sample for that channel and clear the NEWVALUE flag - 1: repeat the conversions until a valid sample is received (caveat: could be never if the UAB valid window is incorrectly schedule w.r.t. SAR sampling)"
      bit_offset: 23
      bit_size: 1
    - name: VALID_SEL
      description: Static UAB Valid select 0=UAB0 half 0 Valid output 1=UAB0 half 1 Valid output 2=UAB1 half 0 Valid output 3=UAB1 half 1 Valid output 4=UAB2 half 0 Valid output 5=UAB2 half 1 Valid output 6=UAB3 half 0 Valid output 7=UAB3 half 1 Valid output
      bit_offset: 24
      bit_size: 3
    - name: VALID_SEL_EN
      description: Enable static UAB Valid selection (override Hardware)
      bit_offset: 27
      bit_size: 1
    - name: VALID_IGNORE
      description: "Ignore UAB valid signal, including the dynamic/Hardware from AROUTE and the static Valid selection from the VALID_SEL fields above"
      bit_offset: 28
      bit_size: 1
    - name: TRIGGER_OUT_EN
      description: SAR output trigger enable (used for UAB synchronization). To ensure multiple UABs starting at the same trigger it is recommended to use this bit to temporarily disable the trigger output until all those UABs are set to run (UAB.SRAM_CTRL.RUN=1).
      bit_offset: 30
      bit_size: 1
    - name: EOS_DSI_OUT_EN
      description: Enable to output EOS_INTR to DSI. When enabled each time EOS_INTR is set by the hardware also a trigger pulse is send on the tr_sar_out signal.
      bit_offset: 31
      bit_size: 1
fieldset/SAMPLE_TIME01:
  description: Sample time specification ST0 and ST1
  fields:
    - name: SAMPLE_TIME0
      description: "Sample time0 (aperture) in ADC clock cycles. Note that actual sample time is one clock less than specified here. The minimum sample time is 167ns, which is 3.0 cycles (4 in this field) with an 18MHz clock. Minimum legal value in this register is 2."
      bit_offset: 0
      bit_size: 10
    - name: SAMPLE_TIME1
      description: Sample time1
      bit_offset: 16
      bit_size: 10
fieldset/SAMPLE_TIME23:
  description: Sample time specification ST2 and ST3
  fields:
    - name: SAMPLE_TIME2
      description: Sample time2
      bit_offset: 0
      bit_size: 10
    - name: SAMPLE_TIME3
      description: Sample time3
      bit_offset: 16
      bit_size: 10
fieldset/SATURATE_INTR:
  description: Saturate interrupt request register.
  fields:
    - name: SATURATE_INTR
      description: "Saturate Interrupt: hardware sets this interrupt for each channel if a conversion result (before averaging) of that channel is either 0x000 or 0xFFF, this is an indication that the ADC likely saturated. Write with '1' to clear bit."
      bit_offset: 0
      bit_size: 16
fieldset/SATURATE_INTR_MASK:
  description: Saturate interrupt mask register.
  fields:
    - name: SATURATE_MASK
      description: Mask bit for corresponding bit in interrupt request register.
      bit_offset: 0
      bit_size: 16
fieldset/SATURATE_INTR_MASKED:
  description: Saturate interrupt masked request register
  fields:
    - name: SATURATE_MASKED
      description: Logical and of corresponding request and mask bits.
      bit_offset: 0
      bit_size: 16
fieldset/SATURATE_INTR_SET:
  description: Saturate interrupt set request register
  fields:
    - name: SATURATE_SET
      description: "Write with '1' to set corresponding bit in interrupt request register."
      bit_offset: 0
      bit_size: 16
fieldset/START_CTRL:
  description: Start control register (firmware trigger).
  fields:
    - name: FW_TRIGGER
      description: "When firmware writes a 1 here it will trigger the next scan of enabled channels, hardware clears this bit when the scan started with this trigger is completed. If scanning continuously the trigger is ignored and hardware clears this bit after the next scan is done. This bit is also cleared when the SAR is disabled."
      bit_offset: 0
      bit_size: 1
fieldset/STATUS:
  description: Current status of internal SAR registers (mostly for debug)
  fields:
    - name: CUR_CHAN
      description: "current channel being sampled (channel 16 indicates the injection channel), only valid if BUSY."
      bit_offset: 0
      bit_size: 5
    - name: SW_VREF_NEG
      description: "the current switch status, including DSI and sequencer controls, of the switch in the SARADC that shorts NEG with VREF input (see NEG_SEL)."
      bit_offset: 30
      bit_size: 1
    - name: BUSY
      description: If high then the SAR is busy with a conversion. This bit is always high when CONTINUOUS is set. Firmware should wait for this bit to be low before putting the SAR in power down.
      bit_offset: 31
      bit_size: 1
enum/AVG_MODE:
  bit_size: 1
  variants:
    - name: ACCUNDUMP
      description: "Accumulate and Dump (1st order accumulate and dump filter): a channel will be sampled back to back and averaged"
      value: 0
    - name: INTERLEAVED
      description: "Interleaved: Each scan (trigger) one sample is taken per channel and averaged over several scans."
      value: 1
enum/COMP_DLY:
  bit_size: 2
  variants:
    - name: D2P5
      description: "2.5ns delay, use this for 2.5Msps"
      value: 0
    - name: D4
      description: "4.0ns delay, use this for 2.0Msps"
      value: 1
    - name: D10
      description: "10ns delay, use this for 1.5Msps"
      value: 2
    - name: D12
      description: "12ns delay, use this for 1.0Msps or less"
      value: 3
enum/COMP_PWR:
  bit_size: 3
  variants:
    - name: P100
      description: "Power = 100 percent, Use this for SAR Clock Frequency greater than 18MHz"
      value: 0
    - name: P80
      description: N/A
      value: 1
    - name: P60
      description: "Power = 60 percent, Use this for SAR Clock Frequency greater than 1.8MHz up to 18MHz."
      value: 2
    - name: P50
      description: N/A
      value: 3
    - name: P40
      description: N/A
      value: 4
    - name: P30
      description: N/A
      value: 5
    - name: P20
      description: "Power = 20 percent, Use this for SAR Clock Frequency less than or equal to 1.8MHz"
      value: 6
    - name: P10
      description: N/A
      value: 7
enum/DIFFERENTIAL_SIGNED:
  bit_size: 1
  variants:
    - name: UNSIGNED
      description: result data is unsigned (zero extended if needed)
      value: 0
    - name: SIGNED
      description: "Default: result data is signed (sign extended if needed)"
      value: 1
enum/INJ_PORT_ADDR:
  bit_size: 3
  variants:
    - name: SARMUX
      description: SARMUX pins.
      value: 0
    - name: CTB0
      description: CTB0
      value: 1
    - name: CTB1
      description: CTB1
      value: 2
    - name: CTB2
      description: CTB2
      value: 3
    - name: CTB3
      description: CTB3
      value: 4
    - name: AROUTE_VIRT
      description: AROUTE virtual port
      value: 6
    - name: SARMUX_VIRT
      description: SARMUX virtual port
      value: 7
enum/NEG_PORT_ADDR:
  bit_size: 3
  variants:
    - name: SARMUX
      description: SARMUX pins.
      value: 0
    - name: AROUTE_VIRT2
      description: AROUTE virtual port2 (VPORT2)
      value: 5
    - name: AROUTE_VIRT1
      description: AROUTE virtual port1 (VPORT1)
      value: 6
    - name: SARMUX_VIRT
      description: SARMUX virtual port (VPORT0)
      value: 7
enum/NEG_SEL:
  bit_size: 3
  variants:
    - name: VSSA_KELVIN
      description: "NEG input of SARADC is connected to 'vssa_kelvin', gives more precision around zero. Note this opens both SARADC internal switches, therefore use this value to insert a break-before-make cycle on those switches when SWITCH_DISABLE is high."
      value: 0
    - name: ART_VSSA
      description: NEG input of SARADC is connected to VSSA in AROUTE close to the SARADC
      value: 1
    - name: P1
      description: NEG input of SARADC is connected to P1 pin of SARMUX
      value: 2
    - name: P3
      description: NEG input of SARADC is connected to P3 pin of SARMUX
      value: 3
    - name: P5
      description: NEG input of SARADC is connected to P5 pin of SARMUX
      value: 4
    - name: P7
      description: NEG input of SARADC is connected to P7 pin of SARMUX
      value: 5
    - name: ACORE
      description: NEG input of SARADC is connected to an ACORE in AROUTE
      value: 6
    - name: VREF
      description: NEG input of SARADC is shorted with VREF input of SARADC.
      value: 7
enum/POS_PORT_ADDR:
  bit_size: 3
  variants:
    - name: SARMUX
      description: SARMUX pins.
      value: 0
    - name: CTB0
      description: CTB0
      value: 1
    - name: CTB1
      description: CTB1
      value: 2
    - name: CTB2
      description: CTB2
      value: 3
    - name: CTB3
      description: CTB3
      value: 4
    - name: AROUTE_VIRT2
      description: AROUTE virtual port2 (VPORT2)
      value: 5
    - name: AROUTE_VIRT1
      description: AROUTE virtual port1 (VPORT1)
      value: 6
    - name: SARMUX_VIRT
      description: SARMUX virtual port (VPORT0)
      value: 7
enum/PWR_CTRL_VREF:
  bit_size: 3
  variants:
    - name: PWR_100
      description: "full power (100 percent) (default), bypass cap, max clk_sar is 18MHz."
      value: 0
    - name: PWR_80
      description: 80 percent power
      value: 1
    - name: PWR_60
      description: 60 percent power
      value: 2
    - name: PWR_50
      description: 50 percent power
      value: 3
    - name: PWR_40
      description: 40 percent power
      value: 4
    - name: PWR_30
      description: 30 percent power
      value: 5
    - name: PWR_20
      description: 20 percent power
      value: 6
    - name: PWR_10
      description: 10 percent power
      value: 7
enum/RANGE_COND:
  bit_size: 2
  variants:
    - name: BELOW
      description: result < RANGE_LOW
      value: 0
    - name: INSIDE
      description: RANGE_LOW <= result < RANGE_HIGH
      value: 1
    - name: ABOVE
      description: RANGE_HIGH <= result
      value: 2
    - name: OUTSIDE
      description: result < RANGE_LOW || RANGE_HIGH <= result
      value: 3
enum/SINGLE_ENDED_SIGNED:
  bit_size: 1
  variants:
    - name: UNSIGNED
      description: "Default: result data is unsigned (zero extended if needed)"
      value: 0
    - name: SIGNED
      description: result data is signed (sign extended if needed)
      value: 1
enum/UAB_SCAN_MODE:
  bit_size: 1
  variants:
    - name: UNSCHEDULED
      description: "Unscheduled UABs: one or more of the UABs scanned by the SAR is not scheduled, for each channel that scans a UAB the SAR will wait for a positive edge on the trigger output of that UAB. Caveat: in this mode the length of SAR scan can be variable."
      value: 0
    - name: SCHEDULED
      description: "Scheduled UABs: All UABs scanned by the SAR are assumed to be properly scheduled, i.e. their output is assumed to be valid when sampled by the SAR and the SAR does not wait. In this mode the length of the SAR scan is constant. This mode requires that the SAR scans strictly periodically, i.e. the SAR has to either run continuously or has to be triggered by a periodic hardware trigger (TCPWM or UDB timer). It also requires that the end of the UAB valid phase is precisely aligned with the end of the SAR sample period (using UAB.STARTUP_DELAY). Normally this scheduling is done by Creator."
      value: 1
enum/VREF_SEL:
  bit_size: 3
  variants:
    - name: VREF0
      description: VREF0 from PRB (VREF buffer on)
      value: 0
    - name: VREF1
      description: VREF1 from PRB (VREF buffer on)
      value: 1
    - name: VREF2
      description: VREF2 from PRB (VREF buffer on)
      value: 2
    - name: VREF_AROUTE
      description: VREF from AROUTE (VREF buffer on)
      value: 3
    - name: VBGR
      description: 1.024V from BandGap (VREF buffer on)
      value: 4
    - name: VREF_EXT
      description: External precision Vref direct from a pin (low impedance path).
      value: 5
    - name: VDDA_DIV_2
      description: Vdda/2 (VREF buffer on)
      value: 6
    - name: VDDA
      description: Vdda.
      value: 7
